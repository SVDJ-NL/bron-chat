services:
  backend:
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - QDRANT_HOST=${QDRANT_HOST}
      - QDRANT_PORT=${QDRANT_PORT}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./backend:/app/backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: /entrypoint.sh
    depends_on:
      - mysql

  frontend:
    env_file:
      - .env
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    stdin_open: true
    tty: true
    environment:
      - PUBLIC_API_URL=${PUBLIC_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0 --port 5173
    depends_on:
      - backend

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: ${MYSQL_PORT}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=caching_sha2_password
      --max-connections=2000
      --innodb-buffer-pool-size=4G
      --innodb-thread-concurrency=16
      --innodb-read-io-threads=8
      --innodb-write-io-threads=8
      --wait_timeout=300
      --interactive_timeout=300
    restart: always

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - pg_data:/var/lib/postgresql/data 
      - ../01-create-role.sql:/docker-entrypoint-initdb.d/01-create-role.sql
      - ../02-init.sql:/docker-entrypoint-initdb.d/02-init.sql

volumes:
  mysql_data:
  pg_data: